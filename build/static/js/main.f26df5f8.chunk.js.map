{"version":3,"sources":["transactionReducer.js","globalContext.js","Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["TransactionReducer","state","action","type","payload","filter","trans","index","initialTransactions","id","amount","desc","TransactionsContext","createContext","TransactionProvider","children","useReducer","dispatch","Provider","value","transactions","addTransaction","transObj","deletItem","transID","Main","useContext","useState","newDesc","setDesc","newAmount","setAmount","getIncome","income","i","length","getExpense","expense","className","map","onClick","onSubmit","event","preventDefault","Number","alert","required","onChange","env","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAeeA,EAfa,SAACC,EAAOC,GAChC,OAAQA,EAAOC,MACX,IAAK,kBACD,MAAM,CAAED,EAAOE,SAAf,mBAA2BH,IAE/B,IAAK,kBACD,OACI,YAAIA,GACJA,EAAMI,QAAO,SAACC,EAAOC,GAAR,OAAkBA,IAAUL,EAAOE,WAGxD,QACI,OAAOH,I,OCVbO,EAAsB,CACxB,CAAEC,GAAI,EAAGC,OAAQ,IAAKC,KAAM,QAC5B,CAAEF,GAAI,EAAGC,QAAS,GAAIC,KAAM,QAC5B,CAAEF,GAAI,EAAGC,QAAS,IAAKC,KAAM,UAC7B,CAAEF,GAAI,EAAGC,OAAQ,IAAKC,KAAM,iBAGnBC,EAAsBC,wBAAcL,GAEpCM,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACzBC,qBAAWhB,EAAoBQ,GADN,mBAC5CP,EAD4C,KACrCgB,EADqC,KAiBjD,OACI,cAACL,EAAoBM,SAArB,CAA8BC,MAAO,CACjCC,aAAcnB,EACdoB,eAlBR,SAAwBC,GACpBL,EAAS,CACLd,KAAM,kBACNC,QAAS,CACLM,OAAQY,EAASZ,OACjBC,KAAMW,EAASX,SAcnBY,UAVR,SAAmBC,GACfP,EAAS,CACLd,KAAM,kBACNC,QAASoB,MAIb,SAKKT,KC9BE,SAASU,IAAQ,IAAD,EACuBC,qBAAWd,GAAvDQ,EADqB,EACrBA,aAAcC,EADO,EACPA,eAAgBE,EADT,EACSA,UADT,EAEFI,mBAAS,IAFP,mBAEtBC,EAFsB,KAEbC,EAFa,OAGEF,mBAAS,GAHX,mBAGtBG,EAHsB,KAGXC,EAHW,KAkB3B,SAASC,IAEL,IADA,IAAIC,EAAS,EACJC,EAAI,EAAGA,EAAId,EAAae,OAAQD,IACjCd,EAAac,GAAGxB,OAAS,IACzBuB,GAAUb,EAAac,GAAGxB,QAGlC,OAAOuB,EAEX,SAASG,IAEL,IADA,IAAIC,EAAU,EACLH,EAAI,EAAGA,EAAId,EAAae,OAAQD,IACjCd,EAAac,GAAGxB,OAAS,IACzB2B,GAAWjB,EAAac,GAAGxB,QAGnC,OAAO2B,EAEX,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,6BACA,+CAAiB,uBAAON,IAAcI,OACtC,sBAAKE,UAAU,oBAAf,UACI,yCAAW,uBAAON,OAClB,0CAAY,uBAAOI,UAEvB,yCACA,uBACA,oBAAIE,UAAU,mBAAd,SACKlB,EAAamB,KAAI,SAACjB,EAAUf,GACzB,OACI,+BACI,+BAAOe,EAASX,OAChB,iCAAQW,EAASZ,OACb,sBAAM4B,UAAU,MAAME,QAAS,WAC3BjB,EAAUhB,IADd,oBAHCA,QAWrB,qDACA,uBACA,uBAAM+B,UAAU,mBAAmBG,SAzD3C,SAAwBC,GAEpB,GADAA,EAAMC,iBACoB,IAAtBC,OAAOd,GAEP,OADAe,MAAM,yBACC,EAEXxB,EAAe,CACXX,OAAQkC,OAAOd,GACfnB,KAAMiB,IAEVC,EAAQ,IACRE,EAAU,KA8CN,UACI,sDAEI,uBACA,uBAAO5B,KAAK,OAAO2C,UAAQ,EAAC3B,MAAOS,EAASmB,SAAU,SAACC,GAAD,OAASnB,EAAQmB,EAAIC,OAAO9B,aAEtF,uBACA,iDAEI,uBACA,uBAAOhB,KAAK,SAAS2C,UAAQ,EAAC3B,MAAOW,EAAWiB,SAAU,SAACC,GAAD,OAASjB,EAAUiB,EAAIC,OAAO9B,aAE5F,uBACA,uBAAOhB,KAAK,SAASgB,MAAM,0BCjE5B+B,MAXf,WACE,OACE,cAAC,EAAD,UACE,8BACE,cAACzB,EAAD,SCKO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f26df5f8.chunk.js","sourcesContent":["const TransactionReducer = ((state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TRANSACTION\": {\r\n            return [action.payload, ...state]\r\n        }\r\n        case \"Del_TRANSACTION\": {\r\n            return (\r\n                [...state],\r\n                state.filter((trans, index) => index !== action.payload)\r\n            )\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n})\r\nexport default TransactionReducer;","import React, { createContext, useReducer } from \"react\";\r\nimport TransactionReducer from './transactionReducer';\r\nconst initialTransactions = [\r\n    { id: 1, amount: 500, desc: \"Cash\" },\r\n    { id: 2, amount: -40, desc: \"Book\" },\r\n    { id: 3, amount: -200, desc: \"Camera\" },\r\n    { id: 4, amount: 200, desc: \"Utility Bill\" }\r\n]\r\n\r\nexport const TransactionsContext = createContext(initialTransactions)\r\n\r\nexport const TransactionProvider = ({ children }) => {\r\n    let [state, dispatch] = useReducer(TransactionReducer, initialTransactions)\r\n    function addTransaction(transObj) {\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: {\r\n                amount: transObj.amount,\r\n                desc: transObj.desc\r\n            },\r\n        })\r\n    }\r\n    function deletItem(transID) {\r\n        dispatch({\r\n            type: \"Del_TRANSACTION\",\r\n            payload: transID,\r\n        })\r\n    }\r\n    return (\r\n        <TransactionsContext.Provider value={{\r\n            transactions: state,\r\n            addTransaction: addTransaction,\r\n            deletItem: deletItem\r\n        }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport { TransactionsContext } from './globalContext';\r\n\r\n\r\nexport default function Main() {\r\n    let { transactions, addTransaction, deletItem } = useContext(TransactionsContext)\r\n    let [newDesc, setDesc] = useState('');\r\n    let [newAmount, setAmount] = useState(0);\r\n\r\n    function handleAddition(event) {\r\n        event.preventDefault();\r\n        if (Number(newAmount) === 0) {\r\n            alert(\"Please Correct value\");\r\n            return false;\r\n        }\r\n        addTransaction({\r\n            amount: Number(newAmount),\r\n            desc: newDesc\r\n        })\r\n        setDesc('')\r\n        setAmount('')\r\n    }\r\n    function getIncome() {\r\n        let income = 0;\r\n        for (var i = 0; i < transactions.length; i++) {\r\n            if (transactions[i].amount > 0) {\r\n                income += transactions[i].amount\r\n            }\r\n        }\r\n        return income;\r\n    }\r\n    function getExpense() {\r\n        let expense = 0;\r\n        for (var i = 0; i < transactions.length; i++) {\r\n            if (transactions[i].amount < 0) {\r\n                expense += transactions[i].amount\r\n            }\r\n        }\r\n        return expense;\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-center\">Expense Tracker</h1>\r\n            <h3>Your Balance <br />{getIncome() + getExpense()}</h3>\r\n            <div className=\"expense-container\">\r\n                <h3>INCOME <br />{getIncome()}</h3>\r\n                <h3>EXPENSE <br />{getExpense()}</h3>\r\n            </div>\r\n            <h3>History</h3>\r\n            <hr />\r\n            <ul className=\"transaction-list\">\r\n                {transactions.map((transObj, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <span>{transObj.desc}</span>\r\n                            <span >{transObj.amount}\r\n                                <span className=\"del\" onClick={() => {\r\n                                    deletItem(index)\r\n                                }}>X</span>\r\n                            </span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <h3>Add new transaction</h3>\r\n            <hr />\r\n            <form className=\"transaction-form\" onSubmit={handleAddition}>\r\n                <label>\r\n                    Enter Description\r\n                    <br />\r\n                    <input type=\"text\" required value={newDesc} onChange={(env) => setDesc(env.target.value)} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Enter Amount\r\n                    <br />\r\n                    <input type=\"number\" required value={newAmount} onChange={(env) => setAmount(env.target.value)} />\r\n                </label>\r\n                <br />\r\n                <input type=\"submit\" value=\"Add Transaction\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Main from './Main';\nimport { TransactionProvider } from './globalContext';\nfunction App() {\n  return (\n    <TransactionProvider>\n      <div>\n        <Main />\n      </div>\n    </TransactionProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}